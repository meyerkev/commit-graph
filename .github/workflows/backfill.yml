name: Backfill Graph

on:
  schedule:
    - cron: '32 3 * * *'  # daily ~03:32 UTC
  workflow_dispatch:
    inputs:
      range_start:
        description: "Start date YYYY-MM-DD (optional)"
        required: false
        type: string
      range_end:
        description: "End date YYYY-MM-DD inclusive (optional)"
        required: false
        type: string
      min:
        description: "Min commits per day (default 15)"
        required: false
        type: string
      max:
        description: "Max commits per day (default 100)"
        required: false
        type: string

permissions:
  contents: write

jobs:
  backfill:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Configure Git
        run: |
          git config user.name "${{ vars.GRAPH_AUTHOR_NAME }}"
          git config user.email "${{ vars.GRAPH_AUTHOR_EMAIL }}"

      - name: Backfill range or last 7 days
        env:
          MIN: ${{ inputs.min || vars.GRAPH_MIN || '15' }}
          MAX: ${{ inputs.max || vars.GRAPH_MAX || '100' }}
          AUTHOR_NAME: ${{ vars.GRAPH_AUTHOR_NAME }}
          AUTHOR_EMAIL: ${{ vars.GRAPH_AUTHOR_EMAIL }}
        run: |
          BEFORE=$(git rev-parse HEAD)
          chmod +x scripts/graph-backfill.sh
          if [ -n "${{ inputs.range_start }}" ]; then
            START='${{ inputs.range_start }}'
          else
            START=$(date -u -d '7 days ago' +%F)
          fi
          if [ -n "${{ inputs.range_end }}" ]; then
            END='${{ inputs.range_end }}'
          else
            END=$(date -u -d 'yesterday' +%F)
          fi
          ./scripts/graph-backfill.sh \
            --start "$START" --end "$END" \
            --min "$MIN" --max "$MAX" \
            --author-name "$AUTHOR_NAME" --author-email "$AUTHOR_EMAIL"
          AFTER=$(git rev-parse HEAD)
          echo "before=$BEFORE" >> $GITHUB_OUTPUT
          echo "after=$AFTER" >> $GITHUB_OUTPUT
        id: backfill

      - name: Push changes
        if: steps.backfill.outputs.before != steps.backfill.outputs.after
        env:
          PAT: ${{ secrets.GRAPH_PAT }}
          BRANCH: ${{ github.ref_name }}
        run: |
          git remote set-url origin "https://x-access-token:${PAT}@github.com/${{ github.repository }}.git"
          git push origin "HEAD:${BRANCH}"
